// p:\Yaget\branch\main\Common\Network\Connectors\include\ClientConnectorObject.h - generated by OIDL Sat Dec 27 04:13:08 2008


#if !defined(CLIENTCONNECTOROBJECT_H)
#define CLIENTCONNECTOROBJECT_H

#include "objectsystem/object.h"
#include "objectsystem/objectproxy.h"
#include "objectsystem/objectreference.h"
#include "Replicate.h"
#include "Simulator.h"
namespace eg {
}

namespace eg {


class ClientConnectorObjectBase : public omega::Object, public ISimulatorObserverReply, public IReplicateReply {

protected:

  virtual void HandleOpen(omega::Object::ConnectionID connection);
  virtual void HandleClose(omega::Object::ConnectionID connection);
  virtual void HandleConnectFailure(omega::Object::ConnectionID connection);
  virtual void HandlePDU(omega::Object::ConnectionID connection, omega::uint32 signature, omega::Object::ObjectID from, omega::Socket::SocketType code, omega::Frame &stream);

public:

  ClientConnectorObjectBase(const omega::OString& name, omega::ObjectManager& manager) : Object(name, "(ISimulatorObserverReply):2adb06e1(IReplicateReply):1dd4bda9", "", manager)
  {
  };

  virtual void HandleOpen(ISimulatorObserverRequestProxy &ref);
  virtual void HandleClose(ISimulatorObserverRequestProxy &ref);
  const ISimulatorObserverReplyRef& GetISimulatorObserverReplyRef()
  {
    return (const ISimulatorObserverReplyRef&) GetReference();
  };

  virtual void Add (ISimulatorObserverRequestProxy &reply,
	omega::uint64 objectId) = 0; // signature 7a47f0d
  virtual void Add (ISimulatorObserverRequestProxy &reply,
	omega::uint64 objectId,
	const omega::OString& streamName) = 0; // signature fc6e65a0
  virtual void Add (ISimulatorObserverRequestProxy &reply,
	omega::uint64 objectId,
	const omega::Frame& frame) = 0; // signature c02c2735
  virtual void Remove (ISimulatorObserverRequestProxy &reply,
	omega::uint64 objectId) = 0; // signature 3cf56655
  virtual void ObserverId (ISimulatorObserverRequestProxy &reply,
	omega::uint64 observerId) = 0; // signature 19afef56
  virtual void HandleOpen(IReplicateRequestProxy &ref);
  virtual void HandleClose(IReplicateRequestProxy &ref);
  const IReplicateReplyRef& GetIReplicateReplyRef()
  {
    return (const IReplicateReplyRef&) GetReference();
  };

  virtual void Replicate (IReplicateRequestProxy &reply,
	omega::uint64 oId,
	omega::uint32 cId,
	const omega::OString& propName,
	bool value) = 0; // signature fe6c9474
  virtual void Replicate (IReplicateRequestProxy &reply,
	omega::uint64 oId,
	omega::uint32 cId,
	const omega::OString& propName,
	omega::float32 value) = 0; // signature 82298879
  virtual void Replicate (IReplicateRequestProxy &reply,
	omega::uint64 oId,
	omega::uint32 cId,
	const omega::OString& propName,
	omega::int32 value) = 0; // signature 6698627e
  virtual void Replicate (IReplicateRequestProxy &reply,
	omega::uint64 oId,
	omega::uint32 cId,
	const omega::OString& propName,
	omega::uint32 value) = 0; // signature aa8963c2
  virtual void Replicate (IReplicateRequestProxy &reply,
	omega::uint64 oId,
	omega::uint32 cId,
	const omega::OString& propName,
	const eg::Vector2& value) = 0; // signature 6b13e085
  virtual void Replicate (IReplicateRequestProxy &reply,
	omega::uint64 oId,
	omega::uint32 cId,
	const omega::OString& propName,
	const eg::Vector3& value) = 0; // signature 6b13e185
  virtual void Replicate (IReplicateRequestProxy &reply,
	omega::uint64 oId,
	omega::uint32 cId,
	const omega::OString& propName,
	const eg::Vector4& value) = 0; // signature 6b13e285
  virtual void Replicate (IReplicateRequestProxy &reply,
	omega::uint64 oId,
	omega::uint32 cId,
	const omega::OString& propName,
	const omega::OString& value) = 0; // signature 5c64f8bf
};
}
#endif
